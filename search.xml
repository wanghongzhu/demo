<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue(二)使用Element-ui组件库渲染后台系统登录页面</title>
      <link href="/2019/04/23/Vue(%E4%BA%8C)%E4%BD%BF%E7%94%A8Element-ui%E7%BB%84%E4%BB%B6%E5%BA%93%E6%B8%B2%E6%9F%93%E5%90%8E%E5%8F%B0%E7%B3%BB%E7%BB%9F%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2/"/>
      <url>/2019/04/23/Vue(%E4%BA%8C)%E4%BD%BF%E7%94%A8Element-ui%E7%BB%84%E4%BB%B6%E5%BA%93%E6%B8%B2%E6%9F%93%E5%90%8E%E5%8F%B0%E7%B3%BB%E7%BB%9F%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>我们想要实现的最终效果为:</p><p>  <img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555817105664">使用Element-ui组件库渲染后台系统登录页面/1555817105664.png)</p><h2 id="一、项目初始化"><a href="#一、项目初始化" class="headerlink" title="一、项目初始化"></a>一、项目初始化</h2><p>执行指令</p><pre class=" language-javascript"><code class="language-javascript">vue init webpack vue<span class="token operator">-</span>shop<span class="token operator">-</span>pro</code></pre><p>把项目的结构文件创建出来</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555559594421">使用Element-ui组件库渲染后台系统登录页面/1555559594421.png)</p><h2 id="二、项目初始配置"><a href="#二、项目初始配置" class="headerlink" title="二、项目初始配置"></a>二、项目初始配置</h2><ul><li><p>在package.json中给webpack做指令配置</p><pre><code>&quot;scripts&quot;: {  &quot;line&quot;: &quot;webpack-dev-server --inline --progress --config build/webpack.dev.conf.js&quot;,  ...  &quot;pack&quot;: &quot;node build/build.js&quot;}</code></pre><blockquote><p>line: 在线运行指令参数</p><p>pack：物理打包指令参数</p></blockquote><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555559632595">使用Element-ui组件库渲染后台系统登录页面/1555559632595.png)</p></li><li><p>在config/index.js中做开发配置</p><pre><code>autoOpenBrowser: true</code></pre><blockquote><p>在线运行项目会自动开启浏览器</p></blockquote></li></ul><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555559918328">使用Element-ui组件库渲染后台系统登录页面/1555559918328.png)</p><h2 id="三、初始化Login-vue组件"><a href="#三、初始化Login-vue组件" class="headerlink" title="三、初始化Login.vue组件"></a>三、初始化Login.vue组件</h2><p>新建  src/components/Login.vue  文件，并设置简单内容</p><p>在  src/router/index.js  文件中给Login.vue配置路由</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">'@/components/Login'</span><span class="token punctuation">{</span> path<span class="token punctuation">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span> component<span class="token punctuation">:</span> Login <span class="token punctuation">}</span></code></pre><blockquote><p>可以把  src/App.vue  根组件的<strong>默认图片</strong>和<strong>css样式</strong>给去除掉</p></blockquote><ol><li><p>创建Login.vue文件并设置简单内容</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555560752890">使用Element-ui组件库渲染后台系统登录页面/1555560752890.png)</p></li><li><p>给Login.vue设置请求路由，具体在src/router/index.js设置</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555560793738">使用Element-ui组件库渲染后台系统登录页面/1555560793738.png)</p></li><li><p>给App.vue把默认图片和css样式去除</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555560844404">使用Element-ui组件库渲染后台系统登录页面/1555560844404.png)</p></li><li><p>访问效果</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555560855680">使用Element-ui组件库渲染后台系统登录页面/1555560855680.png)</p></li></ol><h2 id="四、绘制登录页面背景"><a href="#四、绘制登录页面背景" class="headerlink" title="四、绘制登录页面背景"></a>四、绘制登录页面背景</h2><h3 id="创建global-css样式文件"><a href="#创建global-css样式文件" class="headerlink" title="创建global.css样式文件"></a>创建global.css样式文件</h3><p>为了使得全部的组件都拥有<strong>统一</strong>的css样式，现在创建全局样式文件 src/assets/css/global.css</p><p>并填充如下内容</p><pre class=" language-css"><code class="language-css"><span class="token selector">html,body,<span class="token id">#app</span></span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555561369005">使用Element-ui组件库渲染后台系统登录页面/1555561369005.png)</p><h3 id="应用global-css"><a href="#应用global-css" class="headerlink" title="应用global.css"></a>应用global.css</h3><p>为了使得global.css生效，请在 src/main.js  主入口文件中做引入操作</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">'./assets/css/global.css'</span></code></pre><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555561452968">使用Element-ui组件库渲染后台系统登录页面/1555561452968.png)</p><h3 id="给登录页面绘制背景"><a href="#给登录页面绘制背景" class="headerlink" title="给登录页面绘制背景"></a>给登录页面绘制背景</h3><p>给  src/components/Login.vue  文件设置如下内容</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>用户登录系统<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token id">#login-container</span> </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#2b4b6b</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><blockquote><p>script标签 不需要时，可以暂时不用设置</p></blockquote><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555561476687">使用Element-ui组件库渲染后台系统登录页面/1555561476687.png)</p><p>现在登录页面效果：</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555561490567">使用Element-ui组件库渲染后台系统登录页面/1555561490567.png)</p><blockquote><p>上图的12306端口如果需要可以通过修改config/index.js配置文件设置</p></blockquote><h2 id="五、绘制登录盒子"><a href="#五、绘制登录盒子" class="headerlink" title="五、绘制登录盒子"></a>五、绘制登录盒子</h2><ol><li><p>准备素材图片   src/assets/Vue(二)使用Element-ui组件库渲染后台系统登录页面/logo.png</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555562376188">使用Element-ui组件库渲染后台系统登录页面/1555562376188.png)</p></li><li><p>给 src/components/Login.vue  文件做内容设置</p></li></ol><ul><li><p>template标签内容</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &lt;Vue(二)使用Element-ui组件库渲染后台系统登录页面/ src="../assets/Vue(二)使用Element-ui组件库渲染后台系统登录页面/logo.png" alt>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre></li><li><p>style标签内容</p><pre class=" language-css"><code class="language-css"><span class="token selector">&lt;style lang="less" scoped><span class="token id">#login-container</span> </span><span class="token punctuation">{</span>  <span class="token selector">background-color: <span class="token id">#2b4b6b</span>;  height: 100%;  overflow: hidden;  <span class="token id">#login-box</span> </span><span class="token punctuation">{</span>    <span class="token selector">width: 450px;    height: 304px;    background-color: <span class="token id">#fff</span>;    border-radius: 4px;    position: absolute;    left: 50%;    top: 50%;    transform: translate(-50%, -50%);    <span class="token id">#logo-box</span> </span><span class="token punctuation">{</span>      <span class="token selector">width: 130px;      height: 130px;      border: 1px solid <span class="token id">#eee</span>;      border-radius: 50%;      padding: 8px;      box-shadow: 0 0 10px <span class="token id">#eee</span>;      position: absolute;      left: 50%;      transform: translate(-50%, -50%);      background-color: <span class="token id">#fff</span>;      Vue(二)使用Element-ui组件库渲染后台系统登录页面/ </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>&lt;/style></code></pre></li></ul><p>在Login.vue中具体实现：</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555562410589">使用Element-ui组件库渲染后台系统登录页面/1555562410589.png)</p><p>style样式的具体代码：</p><pre><code>&lt;style lang=&quot;less&quot; scoped&gt;  .login-container{    background-color:#2b4b6b;    height:100%;    overflow: hidden;    .login-box{      width:450px;      height:304px;      background-color:#fff;      border-radius: 4px;      position:absolute;      left:50%;      top:50%;      transform: translate(-50%,-50%);      .avatar-box{        width:130px;        height:130px;        border:1px solid #eee;        border-radius: 50%;        padding:8px;        box-shadow: 0 0 10px #eee;        position:absolute;        left:50%;        transform:translate(-50%,-50%);        background-color:#fff;        Vue(二)使用Element-ui组件库渲染后台系统登录页面/{          width:100%;          height:100%;          border-radius: 50%;          background-color:#eee;        }      }    }  }&lt;/style&gt;</code></pre><p>现在登录窗口盒子和logo图片效果为：</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555562466639">使用Element-ui组件库渲染后台系统登录页面/1555562466639.png)</p><h2 id="六、绘制登录表单"><a href="#六、绘制登录表单" class="headerlink" title="六、绘制登录表单"></a>六、绘制登录表单</h2><h3 id="配置ElementUI"><a href="#配置ElementUI" class="headerlink" title="配置ElementUI"></a>配置ElementUI</h3><ul><li><p><a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noopener">Element-ui参考网址</a></p></li><li><p>运行指令安装element-ui</p><pre><code>npm install element-ui</code></pre><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555813418061">使用Element-ui组件库渲染后台系统登录页面//1555813418061.png)</p></li><li><p>安装plugin插件(使得element-ui可以做  按需引入)</p><pre><code>npm install babel-plugin-component -D </code></pre><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555813461151">使用Element-ui组件库渲染后台系统登录页面//1555813461151.png)</p></li><li><p>修改  .babelrc  配置文件给plugin做<strong>按需引入</strong>配置</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"plugins"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>  <span class="token punctuation">[</span>    <span class="token string">"component"</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token string">"libraryName"</span><span class="token punctuation">:</span> <span class="token string">"element-ui"</span><span class="token punctuation">,</span>      <span class="token string">"styleLibraryName"</span><span class="token punctuation">:</span> <span class="token string">"theme-chalk"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555813497005">使用Element-ui组件库渲染后台系统登录页面//1555813497005.png)</p></li><li><p>在项目主入口文件 src/main.js 中给element-ui做引入配置</p><pre><code>import ElementUI from &#39;element-ui&#39;Vue.use(ElementUI)</code></pre><blockquote><p>不需要引入相关的css文件，因为已经做了“按需引入”了</p></blockquote></li></ul><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555813587617">使用Element-ui组件库渲染后台系统登录页面//1555813587617.png)</p><p>之后重启webpack</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555813636315">使用Element-ui组件库渲染后台系统登录页面//1555813636315.png)</p><h3 id="绘制各个表单域"><a href="#绘制各个表单域" class="headerlink" title="绘制各个表单域"></a>绘制各个表单域</h3><p>绘制 用户名、密码、登录、重置 按钮等表单域</p><p>给 src/components/Login.vue  文件做内容设置</p><ul><li><p>template标签内容</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>avatar-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../assets/Vue(二)使用Element-ui组件库渲染后台系统登录页面//logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginFormRef<span class="token punctuation">"</span></span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginForm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginForm.username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginForm.userpass<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">push</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>重置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre><blockquote><p>ref=”loginFormRef”   使得可以通过Vue方法找到当前的form表单</p><p>:model=”loginForm”     v-bind:属性绑定，把表单域信息对象绑定给model属性</p><p>​                    model在此处就是一个普通的属性名称，与v-model没有任何关系</p><p>el-row/el-col          是对内容列进行定位的</p><p>:offset=”15”              当前列的左侧的间隔格数</p></blockquote></li></ul><ul><li><p>script内容</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 用户登录表单数据对象(用户名、密码)</span>      loginForm<span class="token punctuation">:</span> <span class="token punctuation">{</span>        username<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        userpass<span class="token punctuation">:</span> <span class="token string">''</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>style样式部分</p><pre class=" language-css"><code class="language-css">  <span class="token selector"><span class="token class">.login-box</span> </span><span class="token punctuation">{</span>  <span class="token selector">……    <span class="token class">.el-form</span> </span><span class="token punctuation">{</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li></ul><p>在Login.vue的结构中绘制如下内容：</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555816398256">使用Element-ui组件库渲染后台系统登录页面/1555816398256.png)</p><h3 id="绘制图标"><a href="#绘制图标" class="headerlink" title="绘制图标"></a>绘制图标</h3><p>element-ui提供了一些图标，但是数量有限，如果需要其他图标可以去 阿里妈妈图标库 使用更全的图标</p><p><a href="https://www.iconfont.cn/" target="_blank" rel="noopener">图标库官网</a></p><p>具体使用：</p><ol><li>把下载好的图标库文件复制到项目指定位置：</li></ol><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555485937273">使用Element-ui组件库渲染后台系统登录页面/1555485937273.png)</p><ol start="2"><li><p>在main.js中引入图标库样式文件</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 引入“图标”css样式文件</span><span class="token keyword">import</span> <span class="token string">'./assets/fonts/iconfont.css'</span></code></pre><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555816797687">使用Element-ui组件库渲染后台系统登录页面/1555816797687.png)</p></li><li><p>在Login.vue中给表单域添加图标</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginForm.username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont icon-user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginForm.password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont icon-3702mima<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span></code></pre><p> 示例代码：</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555817092241">使用Element-ui组件库渲染后台系统登录页面/1555817092241.png)</p><p>效果：</p><p><img src="/2019/04/23/Vue(二)使用Element-ui组件库渲染后台系统登录页面/Vue(二" alt="1555817105664">使用Element-ui组件库渲染后台系统登录页面/1555817105664.png)</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Element-ui组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue(一)使用脚手架搭建项目结构</title>
      <link href="/2019/04/22/vue%E4%BD%BF%E7%94%A8%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2019/04/22/vue%E4%BD%BF%E7%94%A8%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是vue-cli"><a href="#什么是vue-cli" class="headerlink" title="什么是vue-cli"></a>什么是vue-cli</h2><p>vue-cli 是一个<strong>脚手架</strong>工具，可以帮助开发者快速创建 vue 项目需要的<strong>骨架</strong>文件</p><p><a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener">官网</a></p><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555336054399.png" alt></p><h2 id="有什么好处"><a href="#有什么好处" class="headerlink" title="有什么好处"></a>有什么好处</h2><ul><li>不必自己搭建项目主结构文件目录</li><li>不必自己安装项目通用功能模块</li><li>不必自己给webpack做主要配置和loader安装配置</li><li>使得开发人员的全部精力集中在业务层面上</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>运行如下指令，安装 vue-cli工具</p><p>(带上 -g 参数，设置为全局安装，使得在系统的任何目录都可以使用)</p><pre class=" language-javascript"><code class="language-javascript">npm install <span class="token operator">-</span>g vue<span class="token operator">-</span>cli            <span class="token comment" spellcheck="true">// 安装操作</span>npm un <span class="token operator">-</span>g vue<span class="token operator">-</span>cli                <span class="token comment" spellcheck="true">// 卸载操作</span></code></pre><blockquote><p>vue-cli分为2和3两个版本，前期先使用2版本即vue-cli，后期再对3版本做说明</p></blockquote><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555553312234.png" alt></p><p>查看安装好的vue-cli</p><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555553375822.png" alt></p><p>vue-cli工具安装完毕就可以通过如下指令初始化项目了(我们此处以pro01的项目名为例)</p><pre class=" language-javascript"><code class="language-javascript">vue init webpack my<span class="token operator">-</span>project   <span class="token comment" spellcheck="true">// 初始化项目</span></code></pre><p>接下来会提示如下参数选项(参考配置即可)：</p><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555553919763.png" alt></p><p>命令执行完毕会在…\Code\目录下自动形成pro01文件目录，内部是创建好的项目主结构文件</p><p>效果如下：</p><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555554030490.png" alt></p><p>主结构文件说明：</p><pre><code>|-- build                            // 项目构建(webpack)相关代码|   |-- build.js                         // 生产环境构建代码|   |-- check-version.js                 // 检查node、npm等版本|   |-- logo.png                         // logo图片|   |-- utils.js                         // 构建工具相关|   |-- vue-loader.conf.js                // vue-loader配置|   |-- webpack.base.conf.js**             // webpack基础配置|   |-- webpack.dev.conf.js**              // webpack开发环境配置|   |-- webpack.prod.conf.js**             // webpack生产环境配置|-- config                           // 项目开发环境配置|   |-- dev.env.js                       // 开发环境配置|   |-- index.js**                         // 项目主要配置(包括监听端口，打包路径等)|   |-- prod.env.js                      // 生产环境配置|-- src                              // 源码目录|   |-- assets                           // 静态资源 |   |-- components**                     // vue公共组件|   |-- router**                         // vue路由|   |-- App.vue**                        // 页面入口文件|   |-- main.js**                        // 程序入口文件，加载各种公共组件|-- static                           // 静态文件，比如一些图片，json数据等|   |-- data                           // 群聊分析得到的数据用于数据可视化|-- .babelrc                         // ES6语法编译配置|-- .editorconfig                    // 定义代码格式|-- .gitignore                       // git上传需要忽略的文件格式|-- .postcssrc.js                    // post-loader的插件配置文件|-- index.html**                       // 入口页面|-- package.json                     // 项目基本信息|-- package-lock.json                // 锁定当前安装的包的依赖|-- README.md                        // 项目说明</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>根据需要可以给<code>vue-cli</code>创建好的项目做基本配置</p><ul><li><p>给package.json做<code>打包</code>参数配置</p><blockquote><p>line: 在线运行指令参数</p><p>pack：物理打包指令参数</p></blockquote><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555554374574.png" alt></p></li></ul><ul><li>在config/index.js文件中设置项目运行<code>主机名</code>、<code>端口</code>、<code>自动开启浏览器</code> 的设置</li></ul><pre><code>autoOpenBrowser: true</code></pre><blockquote><p>在线运行项目会自动开启浏览器</p></blockquote><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555554507418.png" alt></p><p>运行效果：</p><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555554586720.png" alt></p><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555554597599.png" alt></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li>vue-cli脚手架工具，可以辅助快速创建项目结构文件</li><li>安装完毕系统就有一个<code>vue</code>的指令可供生成项目主结构文件使用</li><li>创建项目主结构文件的同时，可以根据需要同时安装 路由、vue、eslint等常用功能包</li></ol><h2 id="给项目安装less扩展包"><a href="#给项目安装less扩展包" class="headerlink" title="给项目安装less扩展包"></a>给项目安装less扩展包</h2><p>通过vue-cli创建的项目主结构文件，默认没有less扩展包的，请安装</p><p>运行指令：</p><pre class=" language-javascript"><code class="language-javascript">npm install <span class="token operator">-</span>D less less<span class="token operator">-</span>loader</code></pre><p><img src="/2019/04/22/vue使用脚手架搭建项目结构/1555560395883.png" alt></p><p>(安装完毕，不需要配置，重启webpack即可)</p><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><p>vue-cli创建项目主结构文件的同时也会创建项目的文件目录，因此不要做重复了</p><p>创建好的项目主结构文件可以做自定义配置，例如：package.json、config/index.js、.prettierrc等</p><p>vue-cli默认没有安装less-loader/less 依赖包，需要自行安装</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的css鼠标进入动画</title>
      <link href="/2019/04/08/css/"/>
      <url>/2019/04/08/css/</url>
      
        <content type="html"><![CDATA[<p>本篇讲述的动画效果均基于 2d转化–&gt;<code>transform</code> 与 过渡–&gt;<code>transition</code>相结合，简单且实用。</p><p>应用时注意div基础样式需自行定义。</p><h2 id="文字和盒子共同旋转、放大"><a href="#文字和盒子共同旋转、放大" class="headerlink" title="文字和盒子共同旋转、放大"></a>文字和盒子共同旋转、放大</h2><p>效果图：</p><p><img src="/2019/04/08/css/1.gif" alt></p><p>注：为了使过渡效果更佳，我们应用了<a href="http://cubic-bezier.com/" target="_blank" rel="noopener">贝塞尔曲线</a></p><p>代码如下：</p><pre class=" language-css"><code class="language-css">&lt;style><span class="token comment" spellcheck="true">/* 2D转化效果1 */</span><span class="token selector"><span class="token class">.animate1</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 过渡时间为0.5s,使用贝塞尔曲线 */</span>    <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token number">0.5</span>s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span><span class="token number">.28</span>,<span class="token number">.19</span>,<span class="token number">.32</span>,<span class="token number">.99</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.animate1</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 旋转加放大 */</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style>&lt;div class=<span class="token string">"animate1"</span>>hello world!&lt;/div></code></pre><h2 id="文字变大，背景盒子变小，有文字凸起效果"><a href="#文字变大，背景盒子变小，有文字凸起效果" class="headerlink" title="文字变大，背景盒子变小，有文字凸起效果"></a>文字变大，背景盒子变小，有文字凸起效果</h2><p>效果图：</p><p><img src="/2019/04/08/css/2.gif" alt></p><p>代码如下：</p><pre class=" language-css"><code class="language-css">&lt;style><span class="token comment" spellcheck="true">/* 2D转化效果2 */</span><span class="token selector"><span class="token class">.animate2</span>,<span class="token class">.animate2</span> div </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 过渡时间为0.5s,使用贝塞尔曲线 */</span>    <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token number">0.5</span>s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span><span class="token number">.28</span>,<span class="token number">.19</span>,<span class="token number">.32</span>,<span class="token number">.99</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.animate2</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 旋转加放大 */</span>    <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.animate2</span> div<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style>&lt;div class=<span class="token string">"animate2"</span>>    &lt;div>hello world!&lt;/div>&lt;/div></code></pre><h2 id="上下遮罩效果"><a href="#上下遮罩效果" class="headerlink" title="上下遮罩效果"></a>上下遮罩效果</h2><p>效果图：</p><p><img src="/2019/04/08/css/3.gif" alt></p><p>代码如下：</p><pre class=" language-css"><code class="language-css">&lt;style><span class="token comment" spellcheck="true">/* 2D转化效果3 */</span><span class="token selector"><span class="token class">.animate3</span> </span><span class="token punctuation">{</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.animate3</span><span class="token pseudo-class">:hover</span> <span class="token class">.top</span> </span><span class="token punctuation">{</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.animate3</span><span class="token pseudo-class">:hover</span> <span class="token class">.bottom</span> </span><span class="token punctuation">{</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.top</span> , <span class="token class">.bottom</span></span><span class="token punctuation">{</span>    <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token number">0.2</span>s <span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.top</span> </span><span class="token punctuation">{</span>    <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to bottom, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.4</span><span class="token punctuation">)</span>, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.bottom</span> </span><span class="token punctuation">{</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -<span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.4</span><span class="token punctuation">)</span>, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style>&lt;div class=<span class="token string">"animate3"</span>>hello world!    &lt;div class=<span class="token string">"top"</span>>&lt;/div>    &lt;div class=<span class="token string">"bottom"</span>>&lt;/div>&lt;/div></code></pre><h2 id="上下拉帘效果"><a href="#上下拉帘效果" class="headerlink" title="上下拉帘效果"></a>上下拉帘效果</h2><p>效果图：</p><p><img src="/2019/04/08/css/4.gif" alt></p><p>代码如下：</p><pre class=" language-css"><code class="language-css">&lt;style><span class="token comment" spellcheck="true">/* 2D转化效果4 */</span><span class="token selector"><span class="token class">.animate4</span> </span><span class="token punctuation">{</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.from_t</span> </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token number">0.3</span>s linear<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.animate4</span><span class="token pseudo-class">:hover</span> <span class="token class">.from_t</span></span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style>&lt;div class=<span class="token string">"animate4"</span>>hello world!    &lt;div class=<span class="token string">"from_t"</span>>&lt;/div>&lt;/div></code></pre><h2 id="向上抖动效果"><a href="#向上抖动效果" class="headerlink" title="向上抖动效果"></a>向上抖动效果</h2><p><img src="/2019/04/08/css/5.gif" alt></p><p>代码如下：</p><pre class=" language-css"><code class="language-css">&lt;style><span class="token comment" spellcheck="true">/* 2D转化效果5 */</span><span class="token selector"><span class="token class">.animate5</span> </span><span class="token punctuation">{</span>    <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token number">0.4</span>s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.animate5</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">10</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style>&lt;div class=<span class="token string">"animate5"</span>>hello world!&lt;/div></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> transform </tag>
            
            <tag> transition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打印九九乘法表的业务逻辑</title>
      <link href="/2019/04/08/99/"/>
      <url>/2019/04/08/99/</url>
      
        <content type="html"><![CDATA[<h2 id="一、九九乘法表的业务逻辑"><a href="#一、九九乘法表的业务逻辑" class="headerlink" title="一、九九乘法表的业务逻辑"></a>一、九九乘法表的业务逻辑</h2><p>此处以打印<code>*</code>为例。两层<code>for</code>循环嵌套，完成第一次外层<code>for</code>循环时内层循环打印一颗<code>*</code>,完成第二次外层<code>for</code>循环时内层循环打印两颗<code>*</code>，以此类推……结论为内层循环次数和外层循环正在进行第几次循环保持一致。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">// 外层for循环</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 内层循环次数需等于外层j的值</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        num <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'*'</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>效果图如下：<br><img src="/2019/04/08/99/3.png" alt></p><h2 id="二、九九乘法表的两种打印方式"><a href="#二、九九乘法表的两种打印方式" class="headerlink" title="二、九九乘法表的两种打印方式"></a>二、九九乘法表的两种打印方式</h2><h4 id="1-在控制台打印"><a href="#1-在控制台打印" class="headerlink" title="1) 在控制台打印"></a>1) 在控制台打印</h4><p>效果图如下：</p><p><img src="/2019/04/08/99/1.png" alt></p><p>代码如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">9</span> <span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> j <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        num <span class="token operator">+</span><span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">'x'</span> <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token string">'='</span> <span class="token operator">+</span> i<span class="token operator">*</span>j <span class="token operator">+</span><span class="token string">'\t'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="2-在浏览器上输出"><a href="#2-在浏览器上输出" class="headerlink" title="2)在浏览器上输出"></a>2)在浏览器上输出</h4><p>效果图如下：</p><p><img src="/2019/04/08/99/2.png" alt></p><p>样式代码如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector">&lt;style>    table </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto <span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">/* 隔行变色 */</span>    <span class="token selector">tr<span class="token pseudo-class">:nth-child(2n)</span></span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">/* 隔行变色 */</span>    <span class="token selector">tr<span class="token pseudo-class">:nth-child(2n+1)</span></span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">td </span><span class="token punctuation">{</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">tr<span class="token pseudo-class">:nth-child(2n)</span> td<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">201</span>, <span class="token number">14</span>, <span class="token number">191</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">tr<span class="token pseudo-class">:nth-child(2n+1)</span> td<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">26</span>, <span class="token number">211</span>, <span class="token number">224</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>&lt;/style></code></pre><p>js 代码如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;table>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">9</span> <span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;tr>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> j <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;td>'</span><span class="token operator">+</span>i <span class="token operator">+</span> <span class="token string">'x'</span> <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token string">'='</span> <span class="token operator">+</span> i<span class="token operator">*</span>j<span class="token operator">+</span><span class="token string">'&lt;/td>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;/tr>'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;/table>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> for循环 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
